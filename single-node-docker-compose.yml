version: '3.9'

services:

  setup:
    image: elasticsearch:${STACK_VERSION}
    container_name: setup
    command: >
      bash -c '
        echo "Setting kibana_system password";
        until curl -s -X POST -u "${ELASTIC_USER:-}:${ELASTIC_PASSWORD:-}" -H "Content-Type: application/json" http://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD:-}\"}"; do sleep 10; done;
        echo "All done!";
      '

  elasticsearch:
    image: elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    depends_on:
      - setup
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_USER=${ELASTIC_USER:-}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-}
      - network.publish_host=${ELASTIC_HOST:-}
      - discovery.type=single-node
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'"
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    image: logstash:${STACK_VERSION}
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - /var/log/GDPR/myapplication:/var/log/GDPR/myapplication:Z
    ports:
      - 5044:5044
    environment:
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
      - xpack.monitoring.enabled=false
      - CONFIG_STRING=input { rabbitmq { host => "rabbitmq" port => 5672 vhost => "/" password => "${RABBIT_PASSWORD:-}" user => "${RABBIT_USER:-}" queue => "projectname.log.queue" exchange => "projectname.log" key => "projectname.log.routing" exchange_type => "direct" type => "rabbitmq" durable => true codec => "json" } } filter { json { source => "message" } mutate { remove_field => ["@version", "type", "event", "@timestamp"] } } output { elasticsearch { hosts => "elasticsearch:9200" user => "${ELASTIC_USER:-}" password => "${ELASTIC_PASSWORD:-}" index => "%{domain}" action => "index" } }

  kibana:
    image: kibana:${STACK_VERSION}
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - kibanadata:/usr/share/kibana/data:z
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD:-}

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    ports:
      - 5672:5672
      - 15672:15672
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER:-}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD:-}

volumes:
  elasticsearch:
    driver: local
  kibanadata:
    driver: local
  rabbitmq_data:
    driver: local
  rabbitmq_log:
    driver: local
